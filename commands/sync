#!/usr/bin/env bash

## Sync your local environment with fresh data and code from Pantheon development environment.
##
## Usage: fin sync

# Abort if anything fails
set -e

start=$SECONDS

# SETTINGS
SITE_DIRECTORY="default"
DOCROOT_PATH="${PROJECT_ROOT}/${DOCROOT}"
SITEDIR_PATH="${DOCROOT_PATH}/sites/${SITE_DIRECTORY}"

# INCLUDES
source "${PROJECT_ROOT}/.docksal/commands/common/sync_db.sh"
source "${PROJECT_ROOT}/.docksal/commands/common/sync_config.sh"


# HELPERS

# Console colors
red='\033[0;31m'
green='\033[0;32m'
green_bg='\033[42m'
yellow='\033[1;33m'
NC='\033[0m'
bg='\[\033[0;35m\]'

echo-red () { echo -e "${red}$1${NC}"; }
echo-green () { echo -e "${green}$1${NC}"; }
echo-green-bg () { echo -e "${green_bg}$1${NC}"; }
echo-yellow () { echo -e "${yellow}$1${NC}"; }

# Windows check
is_windows ()
{
	local res=$(uname | grep 'CYGWIN_NT')
	if [[ "$res" != "" ]]; then
		return 0
	else
		return 1
	fi
}

# Sync db
function _sync_db {
time sync_db $REPLY;
all_done=1
}

# Sync config
function _sync_config {
time sync_config $REPLY;
all_done=1
}

# Accept and set arguments
while [ ! $# -eq 0 ]
do
	case "$1" in
		--skipcim | -sc)
			SKIPCIM=TRUE
			;;
		--skipdb | -sd)
			SKIPDB=TRUE
			;;
	esac
	shift
done

# Execute
if [[ "$PROJECT_ROOT" == "" ]]; then
	echo-red "\$PROJECT_ROOT is not set!"
	exit 1
fi

# Make sure docksal is running
echo -e "${green_bg} Step 1 ${NC}${green} Creating services...${NC}"
fin up

# Check for a clean repository
if ! [ -z "$(git status --untracked-files=no --porcelain)" ]; then
  # Uncommitted changes in tracked files
  echo -e  "${red}WARNING: You have uncommitted changes in your branch.${NC}"
  echo
  echo -e "Commit or stash your changes prior to continuing, and then re-run fin sync:"
  echo
  git status
  exit 1
fi

# Pull from Github
echo -e  "${green_bg} Step 2 ${NC}${green} Pulling $GIT_BRANCH branch from Github...${NC}"
git pull origin $GIT_BRANCH

# Run composer install
echo -e "${green_bg} Step 3 ${NC}${green} Running composer install...${NC}"
composer install

# Start database sync
echo -e "${green_bg} Step 4 ${NC}${green} Import database from:${NC}"

all_done=0

if [[ ${SKIPDB} = "TRUE" ]]; then
    echo "Skipping database import"
    # Move on to config sync
    _sync_config $SKIPCIM
else
    while (( !all_done )); do
        options=($PANTHEON_SITE_ENV 'none' 'exit')
        select opt in "${options[@]}"; do
            case $REPLY in
                1) _sync_db; exit ;;
                2) _sync_config $SKIPCIM; exit ;;
                3) exit ;;
                *) echo "Invalid option" ;;
         esac
        done
    done
fi

# Drush ULI
echo -e "${green_bg} fin uli ${NC}${green} Go ahead and login as admin:${NC}"
fin uli

## Calculate Process time
duration=$(( SECONDS - start ))
## Echo Process time
echo -en "${green_bg} Sync runtime ${NC}${green} ${duration} seconds ${NC}"

exit

sleep 2
